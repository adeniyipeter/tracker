diff --git a/src/app/task-tracker/task-tracker.component.html b/src/app/task-tracker/task-tracker.component.html
index 06f7ec4..605be8a 100644
--- a/src/app/task-tracker/task-tracker.component.html
+++ b/src/app/task-tracker/task-tracker.component.html
@@ -4,18 +4,9 @@
     <button (click)="toggleDarkMode()">{{ darkMode ? 'ðŸŒž' : 'ðŸŒ™' }}</button>
   </div>
 
-  <div class="filter-buttons">
-    <button (click)="setFilter('all')" [class.active]="currentFilter === 'all'">All</button>
-    <button (click)="setFilter('active')" [class.active]="currentFilter === 'active'">Active</button>
-    <button (click)="setFilter('completed')" [class.active]="currentFilter === 'completed'">Completed</button>
-  </div>
-
   <app-task-form (taskAdded)="addTask($event)"></app-task-form>
 
-  <app-task-list
-    [tasks]="filteredTasks"
-    (taskToggled)="toggleTask($event)"
-    (taskDeleted)="deleteTask($event)"
+  <app-task-list [tasks]="filteredTasks" (taskToggled)="toggleTask($event)" (taskDeleted)="deleteTask($event)"
     (taskEdited)="editTask($event)">
   </app-task-list>
-</div>
+</div>
\ No newline at end of file
diff --git a/src/app/task-tracker/task-tracker.component.ts b/src/app/task-tracker/task-tracker.component.ts
index 4830a79..c33ea7c 100644
--- a/src/app/task-tracker/task-tracker.component.ts
+++ b/src/app/task-tracker/task-tracker.component.ts
@@ -4,7 +4,6 @@ import { CommonModule } from '@angular/common';
 import { TaskFormComponent } from '../task-form/task-form.component';
 import { TaskListComponent } from '../task-list/task-list.component';
 
-
 @Component({
   selector: 'app-task-tracker',
   standalone: true,
@@ -19,7 +18,7 @@ export class TaskTrackerComponent implements OnInit {
   currentFilter: 'all' | 'active' | 'completed' = 'all';
   darkMode: boolean = false; // Added dark mode state
 
-  constructor(private taskService: TaskService, private renderer: Renderer2) {}
+  constructor(private taskService: TaskService, private renderer: Renderer2) { }
 
   ngOnInit(): void {
     this.loadTasks();
@@ -27,12 +26,15 @@ export class TaskTrackerComponent implements OnInit {
   }
 
   loadTasks() {
-    this.taskService.getTasks().subscribe((tasks) => this.tasks.set(tasks));
+    this.taskService.getTasks().subscribe((tasks) => {
+      this.tasks = tasks;
+      this.applyFilter(); // Apply the filter after loading tasks
+    });
   }
 
   addTask(task: Task) {
     this.taskService.addTask(task).subscribe((newTask) => {
-      this.tasks.unshift(newTask);
+      this.tasks.unshift(newTask); // Add the new task to the front
       this.applyFilter();
     });
   }
@@ -62,11 +64,13 @@ export class TaskTrackerComponent implements OnInit {
   }
 
   applyFilter() {
-    this.filteredTasks = this.tasks.filter(task => {
-      if (this.currentFilter === 'active') return !task.completed;
-      if (this.currentFilter === 'completed') return task.completed;
-      return true;
-    });
+    if (this.currentFilter === 'active') {
+      this.filteredTasks = this.tasks.filter(task => !task.completed);
+    } else if (this.currentFilter === 'completed') {
+      this.filteredTasks = this.tasks.filter(task => task.completed);
+    } else {
+      this.filteredTasks = this.tasks; // Return all tasks if no specific filter
+    }
   }
 
   setFilter(filter: 'all' | 'active' | 'completed') {
@@ -74,7 +78,6 @@ export class TaskTrackerComponent implements OnInit {
     this.applyFilter();
   }
 
-  // Toggle dark mode method
   toggleDarkMode() {
     this.darkMode = !this.darkMode;
     if (this.darkMode) {
@@ -85,13 +88,14 @@ export class TaskTrackerComponent implements OnInit {
     localStorage.setItem('darkMode', JSON.stringify(this.darkMode)); // Save preference
   }
 
-  // Load dark mode from localStorage
   loadDarkMode() {
     const savedMode = localStorage.getItem('darkMode');
     if (savedMode) {
       this.darkMode = JSON.parse(savedMode);
       if (this.darkMode) {
         this.renderer.addClass(document.documentElement, 'dark');
+      } else {
+        this.renderer.removeClass(document.documentElement, 'dark');
       }
     }
   }
diff --git a/src/styles.css b/src/styles.css
index 03d2d8b..967388e 100644
--- a/src/styles.css
+++ b/src/styles.css
@@ -1,3 +1,19 @@
+/* In styles.css or styles.scss */
+:root {
+  --background-color: white;
+  --text-color: black;
+}
+
+.dark {
+  --background-color: black;
+  --text-color: white;
+}
+
+body {
+  background-color: var(--background-color);
+  color: var(--text-color);
+}
+
 /* General container styling */
 .container {
   max-width: 900px;
